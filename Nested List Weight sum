Given a nested list of integers, return the sum of all integers in the list weighted by their depth.

Each element is either an integer, or a list -- whose elements may also be integers or other lists.

Example 1:
Given the list [[1,1],2,[1,1]], return 10. (four 1's at depth 2, one 2 at depth 1)


-----------------------------------------------------------------------------------------------------------------------
SOlution:O(n) 
-----------------------------------------------------------------------------------------------------------------------

int depthSum(List<NestedInteger> nestedList) {
   return depthSum_helper(nestedList, 1);
}

int depthSum_helper(List<NestedInteger> nestedList, int depth) {
  int sum = 0;
  for(NestedInteger e:nestedList){
    sum += (e.isInteger())? e.Integer*depth : depthSum_helper(e.getList(), depth+1);
  }
  return sum;
}
