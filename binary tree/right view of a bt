/*
   1           <---  1,1
 /   \
2     3         <--- (2,-1), (3,2)
 \     \
  5     4       <--- (5,0), (4,3)
  
  
  You should return [1, 3, 4].

 Struct Node{
      int val;
      Node* left;
      Node* right;
  }
  
  vector<int> result;
  int level = 1;
  int max = 0;
  
  vector <int> rightView(Node* root, int level, int &max){
         if(root == NULL)
             return result;
         if(max<level){
             result.push_back(root->val);    //1,3,4
             max=level;
         }
         rightView(root->right, level+1, max);
         rightView(root->left, level+1, max);  
 }

    
    
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> list = new ArrayList<Integer>();
        helper(root,list,0);
        return list;
    }
    
    void helper(TreeNode root, List<Integer>list, int depth){
        if(root == null){
            return;
        }
        
        if(list.size()==depth){
            list.add(root.val);
        }
        helper(root.right,list, depth+1);
        helper(root.left,list, depth+1);
        
    }
