// C++ Program to shuffle a given array

Question:
Given an array, write a program to generate a random permutation of array elements.
This question is also asked as “shuffle a deck of cards” or “randomize a given array”.
Here shuffle means that every permutation of array element should equally likely.

Logic:
To shuffle an array a of n elements (indices 0..n-1):
  for i from n - 1 downto 1 do
       j = random integer with 0 <= j <= i
       exchange a[j] and a[i]
       
       
Program:

#include<bits/stdc++.h> 
#include <stdlib.h> 
#include <time.h> 
using namespace std; 

void swap (int *a, int *b) 
{ 
	int temp = *a; 
	*a = *b; 
	*b = temp; 
} 

void printArray (int arr[], int n) 
{ 
	for (int i = 0; i < n; i++) 
		cout << arr[i] << " "; 
	cout << "\n"; 
} 

void randomize (int arr[], int n) 
{ 
	// Use a different seed value so that 
	// we don't get same result each time 
	// we run this program 
	srand (time(NULL)); 

	for (int i = n - 1; i > 0; i--) 
	{ 
		// Pick a random index from 0 to i 
		int j = rand() % (i + 1); 

		// Swap arr[i] with the element 
		// at random index 
		swap(&arr[i], &arr[j]); 
	} 
} 

int main() 
{ 
	int arr[] = {1, 2, 3, 4, 5, 6, 7, 8}; 
	int n = sizeof(arr) / sizeof(arr[0]); 
	randomize (arr, n); 
	printArray(arr, n); 

	return 0; 
} 

