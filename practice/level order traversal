Binary tree level order traversal. 
Wrong code:

#include <iostream>
#include <string>
#include <vector>
#include <unordered_map>
#include <queue>

using namespace std;
/*
 *    1
     / \
    3   5
   / \   \
  2   4   7
 / \   \
9   6   8 

1
35
247
968
 *
Algorithm: Breath first search approach

1. Initialize a queue. Add the root node to it.
2. While queue is not empty, look for for the top node's left and right children in the same order.
3. If the left child is not empty, add left child to the queue and right child is not empty, add right child to the queue. Keep track of the level. 
4. While printing, print the nodes from the hashmap that keeps track of the level. 

*/

struct Node {
    int data;
    Node* left;
    Node* right;
};

Node* newNode(Node* root) {
    int data
}
vector<int> levelOrderTraversal (Node* root) {
    queue <Node*> Q;
    unordered_map <Node*, int> hmap;
    vector <int> result;
    Q.push(root);
    while(!Q.empty()){
        Node* top = Q.front();
        result.push_back(top->data);
        Q.pop();
        if(top->left != NULL) {
            Q.push(top->left);
        }
        if(top->right != NULL) {
            Q.push(top->right);
        }
    }
    return result;
}

/*
Q = {3,5,2,4}
hmap = {{1,1}, {3,2}, {5,2}, {2,3}, {4,3}, 
*    1
     / \
    3   5
   / \   \
  2   4   7
 / \   \
9   6   8 
*/
int main() {
    Node* root = newNode(1);
    Node* root->left = newNode(3);
    Node* root->right = newNode(5);
    Node* root->left->left = newNode(2);
    Node* root->left->right = newNode(4);
    Node* root->right->right = newNode(5);
    Node* root->left->left->left = newNode(9);
    Node* root->left->left->right = newNode(6);
    Node* root->left->right->right = newNode(8);
    vector <int> result;
    result = levelOrderTraversal(root);
    for(int i = 0; i < result.size(); i++) {
        cout << result [i] << endl;
    }
    return 0;
}


Was able to come up with a solution quickly
Tracking the levels became difficult.
Downhill from there.
Project explanation was good.
Couldnâ€™t even create a TreeNode*.

Actual Answer: 

https://github.com/Aksha/Technical-and-Competitive-Programming/tree/master/binary%20tree/level%20order%20traversal

