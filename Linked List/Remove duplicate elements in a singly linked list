Use Hash set for most efficient implementation

int RemoveDuplicates(Node* node) {
    unordered_Set<int> unique_keyer;
    if(node == NULL) return 0;
    if(node->next == NULL) return 1;

    Node* previous = NULL;
    Node  current = node;

    while (current != NULL) {
        // First I will search for the element in the hash map
        if (unique_keyer.find(current->value) != unique_keyer.end()) {
            Previous = current->next;
	    Current = current ->next;
        }
        else {
            previous = current;
            unique_keyer.insert(current->value);
            current = current->next;
        }
    }
Return node;
}
