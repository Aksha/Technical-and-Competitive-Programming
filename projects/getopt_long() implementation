Assignment 3:
In a Unix Programming environment, using C, write a program to implement getopt() and getopt_long() and let us call this program ‘showoptions.c’. If the option element is not found, return “unknown” with  a “usage” message.
 
Input:
-c one
-d two
-f three
--carg four
--darg five
--farg six
 
Output:
#C:one
D:two
F:three
 
## try accessing -X , return “unknown” and the usage message (how many command-line arguments there are, what each command-line argument represents, whether a given command-line argument is optional or not, any other information relating to the command-line arguments)
###./showoptions -c blah bye
Return c blah
Bye is a free argument

--------------------------------------------------------------------------------------------------------------------------------------------
Solution:
--------------------------------------------------------------------------------------------------------------------------------------------


#include <stdio.h>
#include <stdlib.h>
#include <getopt.h>

int main(int argc, char **argv) {
   int c;
   while (1) {
        int option_index = 0;
        static struct option long_options[] = {
                {"cargs",  required_argument, 0,  'c' },
                {"dargs",  required_argument, 0,  'd'},
                {"fargs",  required_argument, 0,  'f'}
        };

        c = getopt_long(argc, argv, "c:d:f:",long_options, &option_index);

        if (c == -1)
                 break;
        switch (c) {
                case 'c':
                        option_index = 0;
                        printf("%s: ", long_options[option_index].name);
                        if (optarg)                                
                                printf("%s", optarg);
                        printf("\n");
                        break;
                case 'd':
                        option_index = 1;
                        printf("%s: ", long_options[option_index].name);
                        if (optarg)
                                printf("%s", optarg);
                        printf("\n");
                        break;
                case 'f':
                        option_index = 2;
                        printf("%s: ", long_options[option_index].name);
                        if (optarg)
                                printf("%s", optarg);
                        printf("\n");
                        break;
                case '?':
                        break;
                default :
                        fprintf(stderr, "Usage: -%s optionalargument",c);
                        printf("\n");
                        exit(EXIT_FAILURE);
        }
     }
     if (optind < argc) {
        printf("\n");
        printf("non-option ARGV-elements: ");
        while (optind < argc)
                printf("%s \n", argv[optind++]);
        printf("\n");
     }
   return 0;
}

How to execute:
g++ -c optargs.c
g++ -c optargs_long.c
g++ optargs.o -o optargs
g++ optargs_long.o -o optargs_long

Input:

./optargs_long --cargs hi -c hello --fargs how -d are --dargs you


Output: 

cargs: hi
cargs: hello
fargs: how
dargs: are
dargs: you
