Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, twoâ€™s complement method is used.

Note:

All letters in hexadecimal (a-f) must be in lowercase.
The hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.
The given number is guaranteed to fit within the range of a 32-bit signed integer.
You must not use any method provided by the library which converts/formats the number to hex directly.
Example 1:

Input:
26

Output:
"1a"


#include <iostream>
#include <string>
#include <algorithm>

using namespace std;


string Hex = "0123456789abcdef";
    
string convertToHex(int num){
    string result;
    while(num){
        result += Hex[num%16]; <--// the same logic applies for binary and decimal
        num /= 16;
    }
    reverse(result.begin(),result.end());
    return result;
}


int main() {
    int num = 25;
    cout << convertToHex(num) << endl;
    //cout<<"Hello";
    return 0;
}
