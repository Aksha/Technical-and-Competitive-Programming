Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
  
  
  int evalRPN(vector<string> &tokens) {
        string op = "+-*/";
        stack <int> s;
        if(tokens.size() == 0) return 0;
        for(int i = 0; i < tokens.size(); i++){
            string token = tokens[i];
            int temp = op.find(token);
            if(temp != - 1){
                if(s.size() < 2) return -1;
                else{
                    int b = s.top();
                    s.pop();
                    int a = s.top();
                    s.pop();
                    if(temp  == 0) s.push(a+b);
                    if(temp == 1) s.push(a-b);
                    if(temp == 2) s.push(a*b);
                    if(temp == 3) s.push(a/b);
                }
            }
            else {
                s.push(atoi(token.c_str()));
            }
        }
        return s.top();
    }
