// input: str
// output: array of capital permutations

// input: ba
// output: ["ba", "Ba", "bA", "BA"]

// abc  [abc, Abc, aBc, abC, ABC, aBC, AbC,ABc]

//ba AB ba,

/* 
Time complexity: (2^n)
Space complexity: O(2^n)   
*/ 

Solution: 

vector<string> capPerm_helper(string s, int i, vector<string> result){
    if( i == s.size())
        return result;
    int size = result.size();
    for(int j = 0; j < size; j++){
        string temp = result[j].subtr(0,i-1) + to_upper(s[i]) + result[i+1].substr(i+1);
        result.push_back(temp);
    }
    return capPerm_helper(s,i+1,result);
}


vector<string> capPerm(string s){
    vector <string> result;
    if(s.size()) return result;
    return capPerm_helper(s, 0, result);
}
