## 10. Anagram Palindrome

*Given a string, determine if the string can be rearranged to form a palindrome.*

A palindrome is a word that is the same as its reversed. For example: "racecar" and "noon" are palindromes because they match their reversed version respectively. On the other hand, "cat" is not a palindrome because "cat" does not equal "tac".

**Parameters**  
Input: str {String}    
Output: {Boolean}

**Constraints**  

Assume the string only contains lowercase letters and no spaces.

Time: O(N)  
Space: O(1)

**Examples**  
`"carrace" --> true ("carrace" can be rearranged to "racecar")`  
`"cat" --> false`

Solution 1:

 bool palindrome(string s){
    if( equal(s.begin(), s.begin() + s.size()/2, s.rbegin()) )
        return true;
    else
        return false;
 }
 
 Solution 2: 
bool palindrome(string s){
  int i = 0;
  int j = s.size() - 1;
  while(i<j){
    if(s[i] != s[j])
      return false;
    i++;
    j--;
  }
  return true;
}
