###########################################################################################################################################################
#Implement atoi to convert a string to an integer.

Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.

Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.

Solution: Time complexity: worst case: O(n) as each number in the list is touched upon only once.

int myAtoi(string str) {
  int result = 0;
  int indicator = 1;
  int = 0;
  while(i < str.size()) {
    i = str.find_first_not_of(' ');
    indicator = (str[i++] == "-")?-1:1;
    while(str[i] >= '0' && str[i] <= '9'){
      result = result*10 + (str[i]- '0');
    }
    if(result*indicator >= INT_MAX) return INT_MAX;
    if(result*indicator <= INT_MIN) return INT_MIN;
  }
  return result*indicator;
}

A Solution with better runtime in real world:
class Solution {
public:
    int atoi(string str) {
            int beg = str.find_first_not_of(' ');     
            int end = str.find_last_not_of(' ');
            int flag = (str[beg] == '-') ? -1: 1;
            int num = 0;
        
            while(beg <= end){
                num = (num * 10) + str[beg++] - '0';
        
                if(flag == 1 && num > INT_MAX)
                    return INT_MAX;
                else if(flag == -1 && num > INT_MAX)
                    return INT_MIN;
            }
            return num*flag;
    }
};

###########################################################################################################################################################
