#Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

-----------------------------------------------------------------------------------------------------------------------------------------
Solution:
----------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    int threeSumClosest(vector<int> &num, int target) {
        sort(num.begin(),num.end());
        int sum = 0;
        int min = INT_MAX;
        int n = num.size();
        for(int i = 0; i < n; i++){
            int j = i+1;
            int k = n-1;
            while(j<k){
                int difference = target - num[i] - num[j] - num[k];
                if(abs(difference) < min){
                    min = abs(difference);
                    sum = num[i]+ num[j] + num[k];
                }
                if(difference > 0){
                    j++;
                }
                else{
                    k--;
                }
            }
        }
        return sum;
    }
};
